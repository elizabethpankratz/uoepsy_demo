[
  {
    "objectID": "index.html",
    "href": "index.html",
    "title": "Teaching Demo @ UoE Psychology",
    "section": "",
    "text": "This is the web site for Elizabeth Pankratz’ teaching demo at UoE Psychology on March 26, 2025.\n\n\n\n\nPresentation slides\n\nActivity handout\n\n\n\n\n\nPresentation handout\n\nDetailed analyses"
  },
  {
    "objectID": "pages/demo-handout.html",
    "href": "pages/demo-handout.html",
    "title": "Ordinal regression analysis with polr()",
    "section": "",
    "text": "lorem ipsum"
  },
  {
    "objectID": "pages/demo-handout.html#header",
    "href": "pages/demo-handout.html#header",
    "title": "Ordinal regression analysis with polr()",
    "section": "",
    "text": "lorem ipsum"
  },
  {
    "objectID": "pages/demo-handout.html#header-1",
    "href": "pages/demo-handout.html#header-1",
    "title": "Ordinal regression analysis with polr()",
    "section": "Header",
    "text": "Header\nlorem ipsum"
  },
  {
    "objectID": "index.html#elizabeth-pankratz-teaching-presentation",
    "href": "index.html#elizabeth-pankratz-teaching-presentation",
    "title": "Teaching Demo @ UoE Psychology",
    "section": "",
    "text": "Presentation slides\n\nPresentation handout\n\n\n \n\n\nActivity handout\n\nDetailed analyses"
  },
  {
    "objectID": "pages/detailed-analyses.html",
    "href": "pages/detailed-analyses.html",
    "title": "Detailed analyses",
    "section": "",
    "text": "On this page, I lay out in more technical detail the analysis of the student anxiety data using MASS::polr().\nI also (very) briefly illustrate two other widespread ways of analysing ordinal data: treating it as continuous numeric data and using a Gaussian model, and first converting it to z-scores by participant and then using a Gaussian model on those z-scores."
  },
  {
    "objectID": "pages/detailed-analyses.html#footnotes",
    "href": "pages/detailed-analyses.html#footnotes",
    "title": "Detailed analyses",
    "section": "Footnotes",
    "text": "Footnotes\n\n\nTerry, J., Ross, R. M., Nagy, T., Salgado, M., Garrido-Vásquez, P., Sarfo, J. O., Cooper, S., Buttner, A. C., Lima, T. J. S., Öztürk, İ., Akay, N., Santos, F. H., Artemenko, C., Copping, L. T., Elsherif, M. M., Milovanović, I., Cribbie, R. A., Drushlyak, M. G., Swainston, K., … Field, A. P. (2023). Data from an International Multi-Centre Study of Statistics and Mathematics Anxieties and Related Variables in University Students (the SMARVUS Dataset). Journal of Open Psychology Data, 11(1), 8.↩︎\nIn the teaching presentation materials, I replaced 1–5 with A–E, but for the present analyses, I’ll leave the original digits as labels for each rating level.↩︎\n If I had used method = \"logit\", then the model would assume not a normal distribution but a logistic distribution. Similar shape, but different scale, so (back)transformation between the model space and probability space would happen not with pnorm()/qnorm() but with plogis()/qlogis().↩︎\n Ideally we’d be comparing t-values to a t distribution. But the t distribution approximates the normal distribution increasingly well with increasing degrees of freedom, and degrees of freedom increase with larger sample sizes. And we’ve got a lot of data in this analysis, so I’m not too worried about poorly approximating the H0 distribution.↩︎"
  },
  {
    "objectID": "pages/detailed-analyses.html#intercept-only-model",
    "href": "pages/detailed-analyses.html#intercept-only-model",
    "title": "Detailed analyses",
    "section": "Intercept-only model",
    "text": "Intercept-only model\n\nLook at the data\nHere’s the pattern of participant responses overall to the scenario “Going to ask my statistics teacher for individual help with material I am having difficulty understanding”.\n\nanx |&gt;\n  ggplot(aes(x = factor(rating))) +\n  geom_bar(fill = '#2e3836') +\n  labs(\n    x = element_blank(),\n    y = 'Count',\n    caption = 'n = 8,314'\n  ) +\n  scale_x_discrete(labels = c('1\\n(no anxiety)', '2', '3', '4', '5\\n(a great deal\\nof anxiety)')) +\n  NULL\n\n\n\n\n\n\n\n\n\n\nFit the model\nTo use polr(), the outcome variable must be a factor. There’s no need to manually specify the order of levels, since they’re already in the correct order by default.2\n\nanx &lt;- anx |&gt;\n  mutate(rating = factor(rating))\n\nanx_fit1 &lt;- polr(\n  rating ~ 1,\n  data = anx,\n  method = 'probit',\n  Hess = TRUE  # set TRUE if want to use summary()\n)\n\nsummary(anx_fit1)\n\nCall:\npolr(formula = rating ~ 1, data = anx, Hess = TRUE, method = \"probit\")\n\nNo coefficients\n\nIntercepts:\n    Value    Std. Error t value \n1|2  -0.8420   0.0157   -53.7268\n2|3  -0.1678   0.0138   -12.1462\n3|4   0.3833   0.0141    27.1512\n4|5   1.0339   0.0168    61.6193\n\nResidual Deviance: 26596.28 \nAIC: 26604.28 \n\n\n\n\nInterpret the model\nThe values estimated for the Intercepts aren’t really intercepts, not like the intercept of a linear model. Rather, these values represent the thresholds (also called cutpoints) along a continuous latent variable. This latent variable is a construct which the model assumes to represent some continuous measure of anxiety. Sometimes you’ll see this assumed latent variable represented as \\(\\Phi\\) (phi), and sometimes those thresholds will be represented as \\(\\zeta\\) (zeta).\nWe can extract the threshold values as follows:\n\nanx_fit1$zeta\n\n       1|2        2|3        3|4        4|5 \n-0.8419663 -0.1678099  0.3833389  1.0339047 \n\n\nBecause I’ve used the probit link (by specifying method = \"probit\"), the model further assumes that anxiety follows a standard normal distribution over this continuous latent variable.3 A standard normal distribution is a normal distribution with mean 0 and standard deviation 1.\n\nrating_labs1 &lt;- tibble(\n  x = c(-2.6, -1.2, -0.5, 0.1, 0.7, 1.3),\n  d = c(0.47),\n  labs = c('Rating:', 1:5)\n)\n\np_underlying_normal &lt;- tibble(x = seq(from = -3.5, to = 3.5, length.out = 200)) |&gt; \n  mutate(d = dnorm(x = x)) |&gt; \n  ggplot(aes(x = x, y = d)) +\n  geom_area(fill = '#2e3836', alpha = 0.4) +\n  geom_text(data = rating_labs1, aes(label = labs), family = \"Fira Sans\", size = 8) +\n  geom_vline(xintercept = anx_fit1$zeta, linetype = 'dotted', linewidth = 1) +\n  scale_x_continuous(\n    'Anxiety (assumed latent variable)',\n    breaks = -3:3,\n    sec.axis = dup_axis(\n      name = NULL,\n      breaks = anx_fit1$zeta |&gt; as.double(),\n      labels = round(anx_fit1$zeta, 2)\n    )\n  ) +\n  scale_y_continuous(\n    NULL, \n    breaks = NULL,\n    limits = c(0, 0.5)\n    ) +\n  theme( \n    axis.line.x.top = element_blank(),\n    axis.ticks.x.top = element_blank()\n  ) +\n  NULL\n\np_underlying_normal\n\n\n\n\n\n\n\n\nHaving defined this normal distribution allows us to compute the probability density within each region delineated by the thresholds. One way to do this is using pnorm(). The default usage of pnorm() tells us, for a standard normal distribution, how much probability density falls to the left of the given value. For the intermediate regions, we subtract the probability density below the region’s leftward periphery from the probability density below its rightward periphery, to get only the density between those two bounds.\n\n(anx_fit1_p1 &lt;- pnorm(-0.84))                  # probability of rating 1\n\n[1] 0.2004542\n\n(anx_fit1_p2 &lt;- pnorm(-0.17) - pnorm(-0.84))   # probability of rating 2\n\n[1] 0.2320509\n\n(anx_fit1_p3 &lt;- pnorm(0.38) - pnorm(-0.17))    # probability of rating 3\n\n[1] 0.2155222\n\n(anx_fit1_p4 &lt;- pnorm(1.03) - pnorm(0.38))     # probability of rating 4\n\n[1] 0.2004677\n\n(anx_fit1_p5 &lt;- pnorm(1000) - pnorm(1.03))     # probability of rating 5\n\n[1] 0.151505\n\n\n(For rating 5, I just grabbed some huge value as an arbitrary upper bound. The outcome is essentially the same for upper bounds of 10, 100, 1000…)\nA good sense check: these probabilities approximate the overall proportion of responses to each rating in the original data.\n\ntable(anx$rating) / nrow(anx)\n\n\n        1         2         3         4         5 \n0.1999038 0.2334616 0.2159009 0.2001443 0.1505894 \n\n\nHere’s one way to visualise the probability density within each region of the distribution.\n\nanx_fit1_probs &lt;- c(anx_fit1_p1, anx_fit1_p2, anx_fit1_p3, anx_fit1_p4, anx_fit1_p5)\n\nprob_labs1 &lt;- tibble(\n  x = c(-2.6, -1.2, -0.5, 0.1, 0.7, 1.3),\n  d = c(0.1),\n  labs = c('Probability:', round(anx_fit1_probs, 2))\n)\n\np_underlying_normal +\n  geom_text(data = prob_labs1, aes(label = labs), family = \"Fira Sans\")"
  },
  {
    "objectID": "pages/detailed-analyses.html#modelling-ratings-by-gender",
    "href": "pages/detailed-analyses.html#modelling-ratings-by-gender",
    "title": "Detailed analyses",
    "section": "Modelling ratings by gender",
    "text": "Modelling ratings by gender\n\nLook at the data\n\n\nFit the model\n\n\nInterpret the model"
  },
  {
    "objectID": "pages/detailed-analyses.html#fit-the-model",
    "href": "pages/detailed-analyses.html#fit-the-model",
    "title": "Detailed analyses",
    "section": "Fit the model",
    "text": "Fit the model\nTo use polr(), the outcome variable must be a factor. No need to manually specify the order of levels, since the numeric labelling ensures they’re in the correct order by default.\n\nanx &lt;- anx |&gt;\n  mutate(rating = factor(rating))\n\nI begin by fitting an intercept-only model to this data.\n\nanx_fit1 &lt;- polr(\n  rating ~ 1,\n  data = anx,\n  method = 'probit',\n  Hess = TRUE  # set TRUE if want to use summary()\n)\n\nsummary(anx_fit1)\n\nCall:\npolr(formula = rating ~ 1, data = anx, Hess = TRUE, method = \"probit\")\n\nNo coefficients\n\nIntercepts:\n    Value    Std. Error t value \n1|2  -0.8420   0.0157   -53.7268\n2|3  -0.1678   0.0138   -12.1462\n3|4   0.3833   0.0141    27.1512\n4|5   1.0339   0.0168    61.6193\n\nResidual Deviance: 26596.28 \nAIC: 26604.28 \n\n\nThe values estimated for the Intercepts aren’t really intercepts, not like in a linear model. Rather, they represent the thresholds (also called cutpoints) along a continuous latent variable, a construct which the model assumes to represent some continuous measure of anxiety.\nBecause I’ve used the probit link function in method = \"probit\", the model further assumes that anxiety is normally distributed over this continuous latent variable. (If I had used method = \"logit\", then the model would use not a normal distribution but a logistic distribution.)"
  },
  {
    "objectID": "pages/detailed-analyses.html#rating-gender",
    "href": "pages/detailed-analyses.html#rating-gender",
    "title": "Detailed analyses",
    "section": "rating ~ gender",
    "text": "rating ~ gender\n\nLook at the data\nI first converted gender to a factor. I set Female/Woman as the first level (important for the treatment coding I’ll use below), followed by Male/Man and Another Gender.\n\nanx &lt;- anx |&gt;\n  mutate(gender = factor(gender, levels = c('Female/Woman', 'Male/Man', 'Another Gender')))\n\nHere are participants’ anxiety ratings for the same question as above, now divided by their gender:\n\nanx |&gt;\n  ggplot(aes(x = rating, fill = gender)) +\n  geom_bar() +\n  facet_wrap(~ gender, scales = 'free', nrow=3) +\n  scale_fill_manual(values = palette_gender) +\n  labs(\n    x = element_blank(),\n    y = 'Count'\n  ) +\n  theme(legend.position = 'none') +\n  scale_x_discrete(labels = c('1\\n(no anxiety)', '2', '3', '4', '5\\n(a great deal\\nof anxiety)')) +\n  NULL\n\n\n\n\n\n\n\n\n(Yikes, right? 😞)\n\n\nFit the model\nI used R’s default treatment coding for gender. Because of the level ordering I specified above for gender, Female/Woman will be the reference level, and we’ll get two dummy variables: one comparing Female/Woman to Male/Man, and one comparing Female/Woman to Another Gender. To confirm, here’s the contrast matrix:\n\ncontrasts(anx$gender)\n\n               Male/Man Another Gender\nFemale/Woman          0              0\nMale/Man              1              0\nAnother Gender        0              1\n\n\nFit the model:\n\nanx_fit2 &lt;- polr(\n  rating ~ gender,\n  data = anx,\n  method = 'probit',\n  Hess = TRUE\n)\n\nsummary(anx_fit2)\n\nCall:\npolr(formula = rating ~ gender, data = anx, Hess = TRUE, method = \"probit\")\n\nCoefficients:\n                       Value Std. Error t value\ngenderMale/Man       -0.3280    0.03015 -10.880\ngenderAnother Gender  0.4846    0.11992   4.041\n\nIntercepts:\n    Value    Std. Error t value \n1|2  -0.9045   0.0169   -53.5402\n2|3  -0.2246   0.0150   -14.9847\n3|4   0.3318   0.0151    21.9158\n4|5   0.9889   0.0176    56.2958\n\nResidual Deviance: 26456.99 \nAIC: 26468.99 \n\n\n\n\nInterpret the model\nJust as the Intercepts aren’t the intercept of a line, the Coefficients are not the slope of a line. Rather, they give the mean of the normal distribution that represents how each gender group’s ratings are distributed over the continuous latent variable representing anxiety.\nIn other words, the Female/Woman group is represented by a normal distribution with mean 0 and standard deviation 1, because Female/Woman is the reference level. The normal distribution representing Male/Man anxiety is shifted leftward, in a negative direction, by 0.33 units from the Female/Woman distribution. The Another Gender distribution is shifted rightward, in a positive direction, by 0.48 units.\n\nround(coef(anx_fit2), 2)\n\n      genderMale/Man genderAnother Gender \n               -0.33                 0.48 \n\n\nWith the following code, I compute each group’s normal distribution so that I can plot it. Concretely, I compute the probability density at each value of this latent continuous variable, adjusted for each gender group’s estimated mean.\n\nanx_fit2_latent_normals &lt;- tibble(\n  Gender = factor(\n    c('Female/Woman', 'Male/Man', 'Another Gender'),\n    levels = c('Female/Woman', 'Male/Man', 'Another Gender')),\n  mu = c(0, coef(anx_fit2))\n) |&gt;\n  tidyr::expand(\n    nesting(Gender, mu),\n    x = seq(from = -3.5, to = 3.5, length.out = 200)\n  ) |&gt;\n  mutate(\n    d = dnorm(x, mean = mu, sd = 1)  # get dens at each x value for normal distrib with each row's mu\n  )\n\nhead(anx_fit2_latent_normals)\n\n# A tibble: 6 × 4\n  Gender          mu     x        d\n  &lt;fct&gt;        &lt;dbl&gt; &lt;dbl&gt;    &lt;dbl&gt;\n1 Female/Woman     0 -3.5  0.000873\n2 Female/Woman     0 -3.46 0.000986\n3 Female/Woman     0 -3.43 0.00111 \n4 Female/Woman     0 -3.39 0.00126 \n5 Female/Woman     0 -3.36 0.00141 \n6 Female/Woman     0 -3.32 0.00159 \n\n\n\nrating_labs &lt;- tibble(\n  x = c(-2.6, -1.4, -0.6, 0.1, 0.7, 1.5),\n  d = c(0.57),\n  labs = c('Rating:', 1:5),\n  Gender = c('Female/Woman')\n)\n\nmm_mean &lt;- anx_fit2$coefficients[['genderMale/Man']]\nag_mean &lt;- anx_fit2$coefficients[['genderAnother Gender']]\n\nanx_fit2_latent_normals |&gt;\n  ggplot(aes(x = x, y = d, fill = Gender)) +\n  geom_area(position = 'identity', alpha = 0.5) +\n  geom_vline(xintercept = anx_fit2$zeta, linetype = 'dotted', linewidth = 1) +\n  geom_vline(linewidth = 1, xintercept = 0, colour = palette_gender[1]) +\n  geom_vline(linewidth = 1, xintercept = mm_mean, colour = palette_gender[2]) +\n  geom_vline(linewidth = 1, xintercept = ag_mean, colour = palette_gender[3]) +\n  geom_text(data = rating_labs, aes(label = labs), family = 'Fira Sans', size = 8) +\n  scale_fill_manual(values = palette_gender) +\n  theme(\n    axis.line.x.top = element_blank(),\n    axis.ticks.x.top = element_blank(),\n    legend.position = 'bottom'\n  ) +\n  scale_y_continuous(NULL, breaks = NULL, limits = c(0, 0.6)) +\n  scale_x_continuous(\n    'Anxiety (assumed latent variable)', \n    breaks = -3:3,\n    sec.axis = dup_axis(\n      name = NULL,\n      breaks = anx_fit2$zeta |&gt; as.double(),\n      labels = round(anx_fit2$zeta, 2)\n    )) +\n  geom_segment(aes(x= 0, y = 0.44, xend = mm_mean, yend = 0.44), linewidth = 1.5, arrow = arrow(length = unit(0.5,\"cm\")), colour = palette_gender[2]) +\n  geom_label(aes(x = -0.33, y = 0.49), label = round(mm_mean, 2), fill = 'white', colour = palette_gender[2], family = 'Fira Sans', label.size = 1, size = 6) +\n  geom_segment(aes(x= 0, y = 0.44, xend = ag_mean, yend = 0.44), linewidth = 1.5, arrow = arrow(length = unit(0.5,\"cm\")), colour = palette_gender[3]) +\n  geom_label(aes(x = 0.48, y = 0.49), label = round(ag_mean, 2), fill = 'white', colour = palette_gender[3], family = 'Fira Sans', label.size = 1, size = 6) +\n  NULL\n\n\n\n\n\n\n\n\nThe thresholds do not move. But shifting the normal distributions left and right changes how much probability density is allocated to each region, each rating.\nI wrote the following function to compute the probability density between given thresholds for a normal distribution with given mean and standard deviation. (In these simple models, I’ve kept the standard deviations always fixed at 1, but in principle, the standard deviation is also a parameter that can be fit to the data.)\n\nget_prob_dens &lt;- function(zetas, mu, sigma){\n  # zetas: numeric vector, list of thresholds in Phi space (from polr model)\n  # mu: numeric, mean of normal distribution\n  # sigma: positive numeric, standard deviation of normal distribution\n  \n  # Back-transform thresholds into probability space according to location \n  # of shifted normal. Outcome contains cumulative probabilities.\n  prob_spc_thresholds &lt;- pnorm(zetas, mean = mu, sd = sigma)  \n  \n  # Add first and last elements to this cumsum so that successive differences \n  # come out right.\n  probs_btwn_thresholds &lt;- diff( c(`1` = 0, prob_spc_thresholds, 'x' = 1) )\n  \n  # Rename each element in the vector to the between-threshold sections.\n  names(probs_btwn_thresholds) &lt;- 1:length(probs_btwn_thresholds)\n  \n  probs_btwn_thresholds\n}\n\nHere’s one way to represent each group’s probability distribution individually, including those between-threshold probabilities.\n\nfw_probs &lt;- get_prob_dens(anx_fit2$zeta, 0, 1)\n\nfw_prob_labs &lt;- tibble(\n  x = c(-2.6, -1.4, -0.56, 0.05, 0.66, 1.45),\n  d = c(0.05),\n  labs = c('Probability:', round(fw_probs, 2)),\n  Gender = 'Female/Woman'\n)\n\nanx_fit2_latent_normals |&gt;\n  filter(Gender == 'Female/Woman') |&gt;\n  ggplot(aes(x = x, y = d)) +\n  geom_area(position = 'identity', alpha = 0.5, fill = palette_gender[1]) +\n  geom_vline(xintercept = anx_fit2$zeta, linetype = 'dotted') +\n  geom_text(data = fw_prob_labs, aes(label = labs), family = 'Fira Sans') +\n  geom_text(data = rating_labs, aes(y = d-0.15, label = labs), family = 'Fira Sans', size = 8) +\n  theme(\n    axis.line.x.top = element_blank(),\n    axis.ticks.x.top = element_blank(),\n    legend.position = 'none',\n  ) +\n  scale_y_continuous(NULL, breaks = NULL) +\n  scale_x_continuous(\n    'Anxiety (assumed latent variable)', \n    breaks = -3:3,\n    sec.axis = dup_axis(\n      name = NULL,\n      breaks = anx_fit2$zeta |&gt; as.double(),\n      labels = round(anx_fit2$zeta, 2)\n    )) +\n  ggtitle('Female/Woman') +\n  NULL\n\n\n\n\n\n\n\n\n\nmm_probs &lt;- get_prob_dens(anx_fit2$zeta, mm_mean, 1)\n\nmm_prob_labs &lt;- tibble(\n  x = c(-2.6, -1.4, -0.56, 0.05, 0.66, 1.3),\n  d = c(0.05),\n  labs = c('Probability:', round(mm_probs, 2)),\n  Gender = 'Male/Man'\n)\n\nanx_fit2_latent_normals |&gt;\n  filter(Gender == 'Male/Man') |&gt;\n  ggplot(aes(x = x, y = d)) +\n  geom_area(position = 'identity', alpha = 0.5, fill = palette_gender[2]) +\n  geom_vline(xintercept = anx_fit2$zeta, linetype = 'dotted') +\n  geom_text(data = mm_prob_labs, aes(label = labs), family = 'Fira Sans') +\n  geom_text(data = rating_labs, aes(y = d-0.15, label = labs), family = 'Fira Sans', size = 8) +\n  theme(\n    axis.line.x.top = element_blank(),\n    axis.ticks.x.top = element_blank(),\n    legend.position = 'none',\n  ) +\n  scale_y_continuous(NULL, breaks = NULL) +\n  scale_x_continuous(\n    'Anxiety (assumed latent variable)', \n    breaks = -3:3,\n    sec.axis = dup_axis(\n      name = NULL,\n      breaks = anx_fit2$zeta |&gt; as.double(),\n      labels = round(anx_fit2$zeta, 2)\n    )) +\n  ggtitle('Male/Man') +\n  NULL\n\n\n\n\n\n\n\n\n\nag_probs &lt;- get_prob_dens(anx_fit2$zeta, ag_mean, 1)\n\nag_prob_labs &lt;- tibble(\n  x = c(-2.6, -1.2, -0.56, 0.05, 0.66, 1.7),\n  d = c(0.05),\n  labs = c('Probability:', round(ag_probs, 2)),\n  Gender = 'Another Gender'\n)\n\nanx_fit2_latent_normals |&gt;\n  filter(Gender == 'Another Gender') |&gt;\n  ggplot(aes(x = x, y = d)) +\n  geom_area(position = 'identity', alpha = 0.5, fill = palette_gender[3]) +\n  geom_vline(xintercept = anx_fit2$zeta, linetype = 'dotted') +\n  geom_text(data = ag_prob_labs, aes(label = labs), family = 'Fira Sans') +\n  geom_text(data = rating_labs, aes(y = d-0.15, label = labs), family = 'Fira Sans', size = 8) +\n  theme(\n    axis.line.x.top = element_blank(),\n    axis.ticks.x.top = element_blank(),\n    legend.position = 'none',\n  ) +\n  scale_y_continuous(NULL, breaks = NULL) +\n  scale_x_continuous(\n    'Anxiety (assumed latent variable)', \n    breaks = -3:3,\n    sec.axis = dup_axis(\n      name = NULL,\n      breaks = anx_fit2$zeta |&gt; as.double(),\n      labels = round(anx_fit2$zeta, 2)\n    )) +\n  ggtitle('Another Gender') +\n  NULL\n\n\n\n\n\n\n\n\n\n\nSignificance tests\npolr() doesn’t provide p-values:\n\nsummary(anx_fit2)\n\nCall:\npolr(formula = rating ~ gender, data = anx, Hess = TRUE, method = \"probit\")\n\nCoefficients:\n                       Value Std. Error t value\ngenderMale/Man       -0.3280    0.03015 -10.880\ngenderAnother Gender  0.4846    0.11992   4.041\n\nIntercepts:\n    Value    Std. Error t value \n1|2  -0.9045   0.0169   -53.5402\n2|3  -0.2246   0.0150   -14.9847\n3|4   0.3318   0.0151    21.9158\n4|5   0.9889   0.0176    56.2958\n\nResidual Deviance: 26456.99 \nAIC: 26468.99 \n\n\nBut it does give us t-values. So to know whether we can reject the null hypothesis (H0) that there’s no association between rating and gender, we can just treat the estimated t-values like z-scores and compare them to a standard normal distribution representing the H0.4\n\npnorm(abs(-10.880), lower.tail = FALSE) * 2\n\n[1] 1.43563e-27\n\npnorm(abs(4.041), lower.tail = FALSE) * 2\n\n[1] 5.322376e-05\n\n\nFor both parameters, the probability of observing a value that extreme or more extreme, given the H0 of no effect defined by the standard normal distribution, is less than 0.05. So we can reject the null hypotheses that\n\nthere’s no difference between Female/Woman and Male/Man ratings, and\nthere’s no difference between Female/Woman and Another Gender ratings."
  }
]